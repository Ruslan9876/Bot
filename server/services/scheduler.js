/**
 * –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç node-cron –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
 */

const cron = require('node-cron');
const { db } = require('../database');
const notifier = require('./notifier');

/**
 * –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
 */
async function sendRemindersToAllUsers(timeOfDay) {
  return new Promise((resolve, reject) => {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏
    const sql = `
      SELECT u.id, u.telegram_id, u.full_name, 
             COALESCE(r.reminders_enabled, 1) as reminders_enabled,
             r.morning_time, r.afternoon_time, r.evening_time
      FROM users u
      LEFT JOIN reminders r ON u.id = r.user_id
      WHERE COALESCE(r.reminders_enabled, 1) = 1
    `;

    db.all(sql, [], async (err, users) => {
      if (err) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:', err);
        return reject(err);
      }

      console.log(`üìÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π (${timeOfDay}) –¥–ª—è ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);

      let messages = {
        'morning': '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –ü–æ—Ä–∞ –∏–∑–º–µ—Ä–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –≥–ª—é–∫–æ–∑—ã –Ω–∞—Ç–æ—â–∞–∫ ü©∏',
        'afternoon': '–í—Ä–µ–º—è –æ–±–µ–¥–∞! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∏–∑–º–µ—Ä–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –≥–ª—é–∫–æ–∑—ã –ø–µ—Ä–µ–¥ –µ–¥–æ–π üçΩÔ∏è',
        'evening': '–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä! –í—Ä–µ–º—è –∏–∑–º–µ—Ä–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –≥–ª—é–∫–æ–∑—ã –ø–µ—Ä–µ–¥ —É–∂–∏–Ω–æ–º –∏–ª–∏ —Å–Ω–æ–º üåô'
      };

      for (const user of users) {
        try {
          await notifier.sendReminder(user.id, messages[timeOfDay]);
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.id}:`, error);
        }
      }

      console.log(`‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (${timeOfDay}) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã`);
      resolve();
    });
  });
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ cron-–∑–∞–¥–∞—á–∏
 */
function initializeScheduler() {
  console.log('üïê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á...');

  // –£—Ç—Ä–µ–Ω–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (8:00)
  cron.schedule('0 8 * * *', async () => {
    console.log('‚è∞ –ó–∞–ø—É—Å–∫ —É—Ç—Ä–µ–Ω–Ω–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π (08:00)');
    try {
      await sendRemindersToAllUsers('morning');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ —É—Ç—Ä–µ–Ω–Ω–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è—Ö:', error);
    }
  }, {
    timezone: "Europe/Moscow"
  });

  // –î–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (13:00)
  cron.schedule('0 13 * * *', async () => {
    console.log('‚è∞ –ó–∞–ø—É—Å–∫ –¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π (13:00)');
    try {
      await sendRemindersToAllUsers('afternoon');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è—Ö:', error);
    }
  }, {
    timezone: "Europe/Moscow"
  });

  // –í–µ—á–µ—Ä–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (20:00)
  cron.schedule('0 20 * * *', async () => {
    console.log('‚è∞ –ó–∞–ø—É—Å–∫ –≤–µ—á–µ—Ä–Ω–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π (20:00)');
    try {
      await sendRemindersToAllUsers('evening');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –≤–µ—á–µ—Ä–Ω–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è—Ö:', error);
    }
  }, {
    timezone: "Europe/Moscow"
  });

  // –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ—Ç—á—ë—Ç—ã (–∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 21:00)
  cron.schedule('0 21 * * 0', async () => {
    console.log('üìä –ó–∞–ø—É—Å–∫ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ (–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ 21:00)');
    try {
      await generateWeeklyReports();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–º –∞–Ω–∞–ª–∏–∑–µ:', error);
    }
  }, {
    timezone: "Europe/Moscow"
  });

  console.log('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á –∑–∞–ø—É—â–µ–Ω');
  console.log('   üìÖ –£—Ç—Ä–µ–Ω–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: 08:00');
  console.log('   üìÖ –î–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: 13:00');
  console.log('   üìÖ –í–µ—á–µ—Ä–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: 20:00');
  console.log('   üìÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á—ë—Ç—ã: –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ 21:00');
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á—ë—Ç–æ–≤
 */
async function generateWeeklyReports() {
  return new Promise((resolve, reject) => {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    db.all('SELECT id, full_name FROM users', [], async (err, users) => {
      if (err) {
        return reject(err);
      }

      console.log(`üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á—ë—Ç–æ–≤ –¥–ª—è ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);

      for (const user of users) {
        try {
          await generateUserWeeklyReport(user.id, user.full_name);
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.id}:`, error);
        }
      }

      console.log('‚úÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á—ë—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã');
      resolve();
    });
  });
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function generateUserWeeklyReport(userId, userName) {
  return new Promise((resolve, reject) => {
    // –ü–æ–ª—É—á–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
    const sql = `
      SELECT * FROM alerts 
      WHERE user_id = ? 
        AND severity = 'critical'
        AND created_at >= datetime('now', '-7 days')
      ORDER BY created_at DESC
    `;

    db.all(sql, [userId], async (err, alerts) => {
      if (err) {
        return reject(err);
      }

      // –ï—Å–ª–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π >= 3, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á—ë—Ç –≤—Ä–∞—á—É
      if (alerts.length >= 3) {
        console.log(`‚ö†Ô∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userName} –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${alerts.length} –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–ª—É—á–∞–µ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é`);

        const report = formatWeeklyReport(userName, alerts);
        
        try {
          await notifier.sendReportToDoctor(userId, report);
          console.log(`‚úÖ –û—Ç—á—ë—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userName} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Ä–∞—á—É`);
          
          // –£–≤–µ–¥–æ–º–ª—è–µ–º —Å–∞–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          await notifier.sendWarningNotification(
            userId, 
            `üìã –ó–∞ –ø—Ä–æ—à–µ–¥—à—É—é –Ω–µ–¥–µ–ª—é —É –≤–∞—Å –±—ã–ª–æ ${alerts.length} –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–ª—É—á–∞–µ–≤. –û—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–∞—à–µ–º—É –≤—Ä–∞—á—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –≤—Ä–∞—á–æ–º –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.`
          );
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞:', error);
        }
      } else if (alerts.length > 0) {
        // –ï—Å—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–ª—É—á–∞–∏, –Ω–æ –º–µ–Ω—å—à–µ 3 - –ø—Ä–æ—Å—Ç–æ —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await notifier.sendNormalNotification(
          userId,
          `üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞: –∑–∞ –Ω–µ–¥–µ–ª—é ${alerts.length} –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–ª—É—á–∞–µ–≤. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ –∑–¥–æ—Ä–æ–≤—å—è.`
        );
      }

      resolve();
    });
  });
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á—ë—Ç–∞
 */
function formatWeeklyReport(userName, alerts) {
  let report = `**–ü–∞—Ü–∏–µ–Ω—Ç:** ${userName}\n`;
  report += `**–ü–µ—Ä–∏–æ–¥:** –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π\n`;
  report += `**–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–ª—É—á–∞–µ–≤:** ${alerts.length}\n\n`;
  report += `**–î–µ—Ç–∞–ª–∏:**\n`;

  alerts.forEach((alert, index) => {
    const date = new Date(alert.created_at);
    const dateStr = date.toLocaleDateString('ru-RU');
    const timeStr = date.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });
    
    report += `\n${index + 1}. ${dateStr} ${timeStr}\n`;
    report += `   –¢–∏–ø: ${translateMetricType(alert.metric_type)}\n`;
    report += `   –ó–Ω–∞—á–µ–Ω–∏–µ: ${alert.metric_value}\n`;
    report += `   –°–æ–±—ã—Ç–∏–µ: ${translateAlertType(alert.alert_type)}\n`;
  });

  report += `\n\n**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** –¢—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∏ –≤–æ–∑–º–æ–∂–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –ª–µ—á–µ–Ω–∏—è.`;

  return report;
}

/**
 * –ü–µ—Ä–µ–≤–æ–¥ —Ç–∏–ø–∞ –º–µ—Ç—Ä–∏–∫–∏
 */
function translateMetricType(type) {
  const translations = {
    'glucose': '–£—Ä–æ–≤–µ–Ω—å –≥–ª—é–∫–æ–∑—ã',
    'pressure': '–ê—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ',
    'pulse': '–ü—É–ª—å—Å'
  };
  return translations[type] || type;
}

/**
 * –ü–µ—Ä–µ–≤–æ–¥ —Ç–∏–ø–∞ –∞–ª–µ—Ä—Ç–∞
 */
function translateAlertType(type) {
  const translations = {
    'glucose_critical': '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –≥–ª—é–∫–æ–∑—ã',
    'pressure_critical': '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ',
    'pulse_critical': '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø—É–ª—å—Å'
  };
  return translations[type] || type;
}

/**
 * –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
 */
async function testReminder(userId) {
  try {
    await notifier.sendReminder(userId, '–¢–µ—Å—Ç–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –∏–∑–º–µ—Ä–µ–Ω–∏–∏ –≥–ª—é–∫–æ–∑—ã ü©∏');
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:', error);
  }
}

module.exports = {
  initializeScheduler,
  sendRemindersToAllUsers,
  generateWeeklyReports,
  testReminder
};
